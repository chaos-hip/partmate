import router from "@/router"


export enum LinkType {
    Part = "part",                          // Link target is a part
    StorageLocation = "storageLocation",    // Link target is a storage location
    Attachment = "partAttachment",          // Link target is a part attachment
    Unmapped = "unmapped",                  // The link has not been used yet
}

export interface LinkInfo {
    link: string;            // The link ID echoed back
    targetType: LinkType;    // The type of the link matched
    autoGenerated: boolean;  // Was the link generated automatically?
    createdAt: string;       // Timestamp of the link creation
}

/**
 * Navigates to the page that can handle the given link
 * @param info The link information object returned from the backend
 */
export function navigateToLink(info: LinkInfo) {
    switch (info.targetType) {
        case LinkType.Part:
            router.push(`/part/${info.link}`);
            break;
        case LinkType.StorageLocation:
            router.push(`/storage/${info.link}`);
            break;
        case LinkType.Attachment:
            router.push(`/attachment/${info.link}`);
            break;
        default:
            router.push(`/link/${info.link}`);
    }
}
